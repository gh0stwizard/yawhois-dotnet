<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="-B 80.80.80.80" xml:space="preserve">
    <value>% This is the RIPE Database query service.
% The objects are in RPSL format.
%
% The RIPE Database is subject to Terms and Conditions.
% See http://www.ripe.net/db/support/db-terms-conditions.pdf

% Information related to '80.80.80.0 - 80.80.81.255'

% Abuse contact for '80.80.80.0 - 80.80.81.255' is 'abuse@freenom.com'

inetnum:        80.80.80.0 - 80.80.81.255
netname:        NL-OPENTLD-20050330
descr:          Freenom DNS Cloud IP Space
descr:          Abuse: please contact abuse@freenom.com
descr:          Freenom - www.freenom.com
country:        NL
org:            ORG-BDT1-RIPE
admin-c:        OTJZ101-RIPE
tech-c:         OTMM102-RIPE
status:         ALLOCATED PA
notify:         filtered@example.com
mnt-by:         RIPE-NCC-HM-MNT
mnt-by:         MNT-OPENTLD
created:        2016-07-14T11:29:58Z
last-modified:  2016-07-14T11:54:57Z
source:         RIPE

organisation:   ORG-BDT1-RIPE
org-name:       OpenTLD BV
country:        NL
org-type:       LIR
address:        Danzigerkade 23D
address:        1013 AP
address:        Amsterdam
address:        NETHERLANDS
phone:          +31205315726
fax-no:         +31205315721
e-mail:         filtered@example.com
admin-c:        OTLD101
admin-c:        TKMM102-RIPE
admin-c:        TKJZ101-RIPE
abuse-c:        AR16251-RIPE
mnt-ref:        RIPE-NCC-HM-MNT
mnt-ref:        MNT-OPENTLD
mnt-by:         RIPE-NCC-HM-MNT
mnt-by:         MNT-OPENTLD
created:        2011-07-18T14:43:03Z
last-modified:  2020-12-16T13:35:20Z
source:         RIPE

person:         Joost Zuurbier
org:            ORG-BDT1-RIPE
address:        Danzigerkade 23D
address:        1013 AP  Amsterdam
address:        Netherlands
phone:          +31 20 5315726
nic-hdl:        OTJZ101-RIPE
mnt-by:         MNT-OPENTLD
created:        2013-03-11T09:56:47Z
last-modified:  2016-07-08T15:04:40Z
source:         RIPE

person:         Maurice van der Meer
org:            ORG-BDT1-RIPE
address:        Danzigerkade 23D
address:        1013 AP  Amsterdam
address:        Netherlands
phone:          +31 20 5315726
nic-hdl:        OTMM102-RIPE
mnt-by:         MNT-OPENTLD
created:        2013-03-11T10:28:03Z
last-modified:  2016-07-08T15:04:11Z
source:         RIPE

% Information related to '80.80.80.0/24AS60679'

route:          80.80.80.0/24
descr:          Freenom DNS Cloud
origin:         AS60679
mnt-by:         MNT-OPENTLD
created:        2016-10-24T17:07:51Z
last-modified:  2016-10-24T17:07:51Z
source:         RIPE

% This query was served by the RIPE Database Query Service version 1.99 (WAGYU)</value>
  </data>
</root>